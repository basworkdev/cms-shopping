[{"C:\\WORK\\shopping\\cms-shopping\\src\\index.js":"1","C:\\WORK\\shopping\\cms-shopping\\src\\Main.js":"2","C:\\WORK\\shopping\\cms-shopping\\src\\App.js":"3","C:\\WORK\\shopping\\cms-shopping\\src\\reportWebVitals.js":"4","C:\\WORK\\shopping\\cms-shopping\\src\\page\\LoginPage.js":"5","C:\\WORK\\shopping\\cms-shopping\\src\\page\\DashboardPage.js":"6","C:\\WORK\\shopping\\cms-shopping\\src\\page\\products\\AllProductsPage.js":"7","C:\\WORK\\shopping\\cms-shopping\\src\\page\\order\\OrderTable.js":"8","C:\\WORK\\shopping\\cms-shopping\\src\\page\\products\\CreateProductPage.js":"9","C:\\WORK\\shopping\\cms-shopping\\src\\component\\MenuTopComp.js":"10","C:\\WORK\\shopping\\cms-shopping\\src\\page\\order\\OrderDetailPage.js":"11","C:\\WORK\\shopping\\cms-shopping\\src\\component\\UploadImageComp.js":"12","C:\\WORK\\shopping\\cms-shopping\\src\\component\\ModalShowUploadSlip.js":"13","C:\\WORK\\shopping\\cms-shopping\\src\\component\\TinyEditerComp.js":"14","C:\\WORK\\shopping\\cms-shopping\\src\\component\\ModalShowImageComp.js":"15","C:\\WORK\\shopping\\cms-shopping\\src\\component\\DeliveryAddressComp.js":"16","C:\\WORK\\shopping\\cms-shopping\\src\\component\\SpinnerComp.js":"17","C:\\WORK\\shopping\\cms-shopping\\src\\apis\\LoginApi.js":"18","C:\\WORK\\shopping\\cms-shopping\\src\\apis\\ProductsApi.js":"19","C:\\WORK\\shopping\\cms-shopping\\src\\apis\\MainApi.js":"20","C:\\WORK\\shopping\\cms-shopping\\src\\apis\\OrderApi.js":"21","C:\\WORK\\shopping\\cms-shopping\\src\\component\\UploadImmagePaySlipComp.js":"22","C:\\WORK\\shopping\\cms-shopping\\src\\firebase\\index.js":"23"},{"size":528,"mtime":1631110165382,"results":"24","hashOfConfig":"25"},{"size":2459,"mtime":1646061218335,"results":"26","hashOfConfig":"25"},{"size":528,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"25"},{"size":2132,"mtime":1631111745935,"results":"29","hashOfConfig":"25"},{"size":158,"mtime":1614002162024,"results":"30","hashOfConfig":"25"},{"size":5474,"mtime":1646060738916,"results":"31","hashOfConfig":"25"},{"size":4635,"mtime":1631113639434,"results":"32","hashOfConfig":"25"},{"size":27208,"mtime":1646149547303,"results":"33","hashOfConfig":"25"},{"size":2883,"mtime":1631113560533,"results":"34","hashOfConfig":"25"},{"size":18535,"mtime":1647440157341,"results":"35","hashOfConfig":"25"},{"size":2340,"mtime":1631111024263,"results":"36","hashOfConfig":"25"},{"size":974,"mtime":1647358268458,"results":"37","hashOfConfig":"25"},{"size":6800,"mtime":1631110924601,"results":"38","hashOfConfig":"25"},{"size":784,"mtime":1631110561685,"results":"39","hashOfConfig":"25"},{"size":1002,"mtime":1631110431339,"results":"40","hashOfConfig":"25"},{"size":390,"mtime":1631110638149,"results":"41","hashOfConfig":"25"},{"size":493,"mtime":1631108329959,"results":"42","hashOfConfig":"25"},{"size":5452,"mtime":1615199149148,"results":"43","hashOfConfig":"25"},{"size":5265,"mtime":1646146682172,"results":"44","hashOfConfig":"25"},{"size":4343,"mtime":1647358424434,"results":"45","hashOfConfig":"25"},{"size":7850,"mtime":1647439432829,"results":"46","hashOfConfig":"25"},{"size":605,"mtime":1647357936085,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"e9sjfw",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"51"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\WORK\\shopping\\cms-shopping\\src\\index.js",["109"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["110","111"],"C:\\WORK\\shopping\\cms-shopping\\src\\Main.js",["112","113","114","115","116","117","118"],"import React , {useState , useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useLocation,\r\n    useHistory\r\n} from \"react-router-dom\";\r\n// CSS\r\nimport './assets/bootstrap-4.5.3/css/bootstrap-grid.css'\r\nimport './assets/bootstrap-4.5.3/css/bootstrap-reboot.css'\r\nimport './assets/bootstrap-4.5.3/css/bootstrap.css'\r\nimport './assets/css/main.css'\r\nimport './assets/css/main-admin.css'\r\nimport './assets/fontawesome-free-5.15.1-web/css/all.css';\r\nimport './assets/css/spinner.css'\r\n\r\n// JS\r\nimport $ from \"jquery\"\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\n// Admin Page\r\nimport LoginAdminPage from './page/LoginPage'\r\nimport DashboardPage from './page/DashboardPage'\r\n\r\n\r\n// Admin Components\r\nimport AdminMenuTopComp from './component/MenuTopComp'\r\nimport AllProductsPage from './page/products/AllProductsPage'\r\nimport CreateProductPage from './page/products/CreateProductPage'\r\nimport OrderTable from \"./page/order/OrderTable\";\r\nimport OrderDetailPage from \"./page/order/OrderDetailPage\";\r\n\r\n\r\n\r\nexport default function Main(props) {\r\n    const [subUrlState , setSubUrlState] = useState([\"\"]);\r\n    \r\n    useEffect(()=>{\r\n        let url = window.location\r\n        console.log(url.pathname.split(\"/\"))\r\n        setSubUrlState(url.pathname.split(\"/\"));\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                {localStorage.getItem(\"user\")\r\n                ? \r\n                <><AdminMenuTopComp/></>\r\n                // <></>\r\n                : \r\n                <></>}\r\n\r\n                <Switch>\r\n                    <Route path=\"/login\">\r\n                        <LoginAdminPage/>\r\n                    </Route>\r\n                    <Route path=\"/dashboard\">\r\n                        <DashboardPage/>\r\n                    </Route>\r\n                    <Route path=\"/all-product\">\r\n                        <AllProductsPage/>\r\n                    </Route>\r\n                    <Route path=\"/product/:event/:id\">\r\n                        <CreateProductPage/>\r\n                    </Route>\r\n                    <Route path=\"/all-order\">\r\n                        <OrderTable/>\r\n                    </Route>\r\n                    <Route path=\"/order-detail/:orderId\">\r\n                        <OrderDetailPage/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\App.js",[],"C:\\WORK\\shopping\\cms-shopping\\src\\reportWebVitals.js",[],"C:\\WORK\\shopping\\cms-shopping\\src\\page\\LoginPage.js",["119","120","121"],"import React ,{useState,useEffect} from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport conTxt from \"../config/text.json\";\r\nimport LoginApi from \"../apis/LoginApi\"\r\n\r\nexport default function LoginPage(props) {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        localStorage.clear();\r\n    },[])\r\n\r\n    \r\n    const onSubmit = async (data) => {\r\n        let md5 = require('md5');\r\n        let loginData = {\r\n            userName : data.userName,\r\n            password : md5(data.password)\r\n        }\r\n        const login = await LoginApi.doserviceLogin(loginData);\r\n        if(login.code === 1) {\r\n            localStorage.setItem(\"user\" , JSON.stringify({\r\n                userName : loginData.userName,\r\n                name : login.name\r\n            }));\r\n            window.location.replace(\"/dashboard\");\r\n        }else {\r\n            alert(login.message);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        <div className=\"container\" style={{paddingTop : \"100px\",paddingBottom : \"100px\"}}>\r\n            <h1 className=\"text-center font-weight-bold\">Login</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <label>User</label>\r\n                    <input type=\"text\" name=\"userName\" ref={register({ required: true })} className=\"form-control\"/>\r\n                    {errors.userName && <small className=\"form-text text-danger\">{conTxt.validate.requestFiles}</small>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"password\" ref={register({ required: true })} className=\"form-control\"/>\r\n                    {errors.password && <small className=\"form-text text-danger\">{conTxt.validate.requestFiles}</small>}\r\n                </div>\r\n                <center><button type=\"submit\" className=\"btn btn-primary\">login</button></center>\r\n            </form>\r\n        </div>\r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\page\\DashboardPage.js",["122"],"import React ,{useState} from \"react\";\r\n\r\nexport default function DashboardPage(props) {\r\n    \r\n    \r\n    return(\r\n        <>\r\n        \r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\page\\products\\AllProductsPage.js",["123","124","125","126","127","128","129"],"import React ,{useState,useEffect} from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\nimport ProductsApi from '../../apis/ProductsApi'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport tc from '../../config/text.json'\r\n\r\n\r\nexport default function AllProductsPage(props) {\r\n  const tcv = tc.validate.requestFiles;\r\n  let history = useHistory();\r\n  const [dataProductsState , setDataProductState] = useState([])\r\n\r\n  useEffect(()=>{\r\n    getProducts();\r\n  },[])\r\n\r\n  const editProduct = (id) => {\r\n    history.push(`product/edit/${id}`)\r\n  }\r\n\r\n  const deleteProduct = async (id,img) => {\r\n    let confirmX = window.confirm(\"ยืนยันการลบสินค้า รหัส \" + id);\r\n    let imgList = img.split(\",\")\r\n    imgList = imgList.map((data,index)=>{\r\n      let name = data.split(\"/\");\r\n      return name[4];\r\n    })\r\n    if(confirmX === true) {\r\n      let data = {\r\n        id : id,\r\n        img : imgList\r\n      }\r\n      let res = await ProductsApi.doserviceDeleteProduct(data);\r\n      if(res.code === 1) {\r\n        getProducts();\r\n        alert(res.message);\r\n      } else {\r\n        alert(tcv.error);\r\n      }\r\n    }\r\n  }\r\n    \r\n  const getProducts = async () => {\r\n    let products = await ProductsApi.doserviceGetAllProduct();\r\n    let productsData = products.map((data,index)=>{\r\n      return {\r\n        id : data.id,\r\n        productKey : data.productKey,\r\n        name : data.name,\r\n        price : data.price,\r\n        fullPrice : data.fullPrice,\r\n        productKey : data.productKey,\r\n        type : data.typeName,\r\n        brand  : data.brand,\r\n        stock : data.stock,\r\n        status : data.status,\r\n        img : data.img,\r\n        mainImg : data.mainImg\r\n      }\r\n    })\r\n    setDataProductState(productsData);\r\n  }\r\n    \r\n  const FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n    <>\r\n    <div className=\"row\">\r\n        <div className=\"col-10\">\r\n            <input id=\"search\" className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search Input\" value={filterText} onChange={onFilter} />\r\n        </div>\r\n        <div className=\"col-2\">\r\n            <button type=\"button\" className=\"btn btn-outline-dark\" onClick={onClear}>X</button>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n    \r\n  const columns = [\r\n    {\r\n      name: 'รหัส',\r\n      selector: 'id',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'คีย์',\r\n      selector: 'productKey',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ชื่อ',\r\n      selector: 'name',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ประเภท',\r\n      selector: 'type',\r\n      sortable: true,\r\n    },\r\n    {\r\n        name: 'แบรนด์',\r\n        selector: 'brand',\r\n        sortable: true,\r\n    },\r\n    {\r\n        name: 'ราคา',\r\n        selector: 'price',\r\n        sortable: true,\r\n    },\r\n    {\r\n      name: 'ราคาหลัก',\r\n      selector: 'fullPrice',\r\n      sortable: true,\r\n    },\r\n    {\r\n        name: 'สต็อก',\r\n        selector: 'stock',\r\n        sortable: true,\r\n    },\r\n    {\r\n      cell: (data) => <>\r\n        <font style={{fontSize : \"1.2rem\" , cursor : \"pointer\"}} className=\"text-warning\" onClick={()=>editProduct(data.id)}><i className=\"fas fa-edit\"></i></font> &nbsp;&nbsp;&nbsp;\r\n        <font style={{fontSize : \"1.2rem\" , cursor : \"pointer\"}} className=\"text-danger\" onClick={()=>deleteProduct(data.id,(data.img+\",\"+data.mainImg))}><i className=\"fas fa-minus-circle\"></i></font>\r\n      </>\r\n    }\r\n  ];\r\n  \r\n  const BasicTable = () => {\r\n    const [filterText, setFilterText] = React.useState('');\r\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n    console.log(dataProductsState.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase())))\r\n    const filteredItems = dataProductsState.filter(item => \r\n        item.name && item.name.toLowerCase().includes(filterText.toLowerCase()) ||\r\n        // item.id && item.id.toLowerCase().includes(filterText.toLowerCase()) ||\r\n        item.brand && item.brand.toLowerCase().includes(filterText.toLowerCase()) ||\r\n        item.type && item.type.toLowerCase().includes(filterText.toLowerCase())\r\n        );\r\n  \r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n      const handleClear = () => {\r\n        if (filterText) {\r\n          setResetPaginationToggle(!resetPaginationToggle);\r\n          setFilterText('');\r\n        }\r\n      };\r\n  \r\n      return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\r\n    }, [filterText, resetPaginationToggle]);\r\n  \r\n    return (\r\n      <DataTable\r\n        // title=\"Contact List\"\r\n        columns={columns}\r\n        data={filteredItems}\r\n        pagination\r\n        paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponentMemo}\r\n        selectableRows\r\n        persistTableHead\r\n      />\r\n    );\r\n  };\r\nreturn(\r\n    <>\r\n        <div className=\"container admin-page\">\r\n            <h2>สินค้าทั้งหมด <span><button className=\"btn btn-primary\" onClick={()=>{history.push('/product/create/product')}}>เพิ่มสินค้า</button></span></h2>\r\n            <br/>\r\n            \r\n            <div>\r\n                <BasicTable/>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\page\\order\\OrderTable.js",["130","131","132","133","134","135","136","137","138","139"],"import React ,{useState,useEffect} from \"react\";\r\nimport DataTable from 'react-data-table-component';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport tc from '../../config/text.json'\r\n\r\n// Apis\r\nimport OrderApi from '../../apis/OrderApi'\r\n\r\n\r\nexport default function OrderTable(props) {\r\n  const tcv = tc.validate.requestFiles;\r\n  let history = useHistory();\r\n  let moment = require('moment');\r\n  let numeral = require('numeral');\r\n  const [dataState , setDataState] = useState([])\r\n\r\n  useEffect(()=>{\r\n    getData();\r\n  },[])\r\n    \r\n  const getData = async () => {\r\n    let resp = await OrderApi.doserviceGetOrderAll();\r\n    setDataState(resp);\r\n  }\r\n    \r\n  const FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n    <>\r\n    <div className=\"row\">\r\n        <div className=\"col-10\">\r\n            <input id=\"search\" className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search Input\" value={filterText} onChange={onFilter} />\r\n        </div>\r\n        <div className=\"col-2\">\r\n            <button type=\"button\" className=\"btn btn-outline-dark\" onClick={onClear}>X</button>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n    \r\n  const columns = [\r\n    // {\r\n    //   cell: (data) => {\r\n    //     return <button type=\"button\" class=\"btn btn-primary btn-sm\"><i class=\"fas fa-file\"></i></button>\r\n    //   },\r\n    //   width : \"50px\"\r\n      \r\n    // },\r\n    {\r\n      name: 'รหัส',\r\n      selector: 'id',\r\n      sortable: true,\r\n      width : \"150px\"\r\n    },\r\n    {\r\n      name: 'ชื่อ',\r\n      selector: 'customer_name',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'อีเมล',\r\n      selector: 'customer_email',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'จำนวน',\r\n      selector: 'amount',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'ราคา',\r\n      selector: 'sum_price',\r\n      sortable: true,\r\n      cell: (data) => {\r\n        let value = \"-\"\r\n        if(data) {\r\n          value = numeral(data.sum_price).format('0,0')\r\n        }\r\n        return value;\r\n      }\r\n    },\r\n    {\r\n      name: 'สถานะ',\r\n      selector: 'status',\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'วันที่สั่งซื้อ',\r\n      selector: 'order_time',\r\n      sortable: true,\r\n      cell: (data) => {\r\n        return moment(data.order_time).format(\"YYYY/MM/DD\")\r\n      }\r\n    },\r\n    {\r\n      name: 'วันที่อัพเดต',\r\n      selector: 'order_time_update',\r\n      sortable: true,\r\n      cell: (data) => {\r\n        return moment(data.order_time_update).format(\"YYYY/MM/DD\")\r\n      }\r\n    }\r\n  ];\r\n  \r\n  const BasicTable = () => {\r\n    const [filterText, setFilterText] = React.useState('');\r\n    const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n    // console.log(dataState.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase())))\r\n    const filteredItems = dataState.filter(item => \r\n        item.id && item.id.toLowerCase().includes(filterText.toLowerCase()) ||\r\n        item.customer_name && item.customer_name.toLowerCase().includes(filterText.toLowerCase()) ||\r\n        item.customer_email && item.customer_email.toLowerCase().includes(filterText.toLowerCase()) ||\r\n        item.status && item.status.toLowerCase().includes(filterText.toLowerCase())\r\n        );\r\n  \r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n      const handleClear = () => {\r\n        if (filterText) {\r\n          setResetPaginationToggle(!resetPaginationToggle);\r\n          setFilterText('');\r\n        }\r\n      };\r\n  \r\n      return <FilterComponent onFilter={e => setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\r\n    }, [filterText, resetPaginationToggle]);\r\n  \r\n    const rowClick = (e) => {\r\n      window.open( `/order-detail/${e.id}`, '_blank');\r\n      \r\n    }\r\n    return (\r\n      <div style={{cursor : \"pointer\"}}>\r\n        <DataTable\r\n          noHeader\r\n          columns={columns}\r\n          data={filteredItems}\r\n          pagination\r\n          paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\r\n          subHeader\r\n          subHeaderComponent={subHeaderComponentMemo}\r\n          // selectableRows\r\n          persistTableHead\r\n          onRowClicked={(e)=>rowClick(e)}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\nreturn(\r\n    <>\r\n        <div className=\"container admin-page\">\r\n            <h2>ออเดอร์ทั้งหมด</h2>\r\n            <br/>\r\n            <div>\r\n                <BasicTable/>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\page\\products\\CreateProductPage.js",["140","141","142","143","144","145","146","147","148","149","150"],"import React ,{useState,useEffect} from \"react\";\r\nimport { useForm  } from \"react-hook-form\";\r\nimport { BrowserRouter as Router, useParams } from \"react-router-dom\";\r\nimport ProductsApi from '../../apis/ProductsApi'\r\nimport Select from 'react-select';\r\nimport tc from '../../config/text.json'\r\nimport {storage} from \"../../firebase\"\r\n\r\n// Comp\r\nimport UploadImageComp from '../../component/UploadImageComp'\r\nimport TinyEditerComp from '../../component/TinyEditerComp';\r\nimport SpinnerComp from \"../../component/SpinnerComp\"\r\n\r\n// Apis\r\nimport MainApi from '../../apis/MainApi'\r\n\r\nexport default function CreateProductPage(props) {\r\n  let { event,id } = useParams();\r\n  let _ = require('lodash');\r\n  let moment = require('moment');\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n  const [spinnerState,setSpinnerState] = useState(false);\r\n  const [dataBrandState , setDataBrandState] = useState([]);\r\n  const [dataProductTypeState , setDataProductTypeState] = useState([]);\r\n  const [dataColorState , setDataColorState] = useState([]);\r\n  const [selectColorState , setSelectColorState] = useState([]);\r\n  const [imagesUploadState , setImagesUploadState] = useState([]);\r\n  const [selectTypeState , setSelectTypeState] = useState({});\r\n  const [typeState , setTypeState] = useState(\"\");\r\n  const [selectBrandState,selectSetBrandState] = useState({})\r\n  const [brandState , setBrandState] = useState(\"\");\r\n  const [productState , setProductState] = useState([]);\r\n  const [selectSalesType,setSelectSalesType] = useState({ value: 'CASH', label: 'Cash' })\r\n  const [salesType , setSalesType] = useState([\r\n        { value: 'CASH', label: 'Cash' },\r\n        { value: 'PREORDER', label: 'Pre-order' }\r\n  ])\r\n  const [selectCarModelState , setSelectCarModelState] = useState({data : []})\r\n  const [dataCarModelState , setDataCarModelState] = useState([])\r\n  const [showImageState , setShowImageState] = useState({  \r\n      main : null,\r\n      image : []\r\n  })\r\n  const [fileImageState , setFileImageState] = useState({  \r\n    main : null,\r\n    image : []\r\n})\r\n\r\n  const tcv = tc.validate.requestFiles;\r\n  \r\n  useEffect( async () => {\r\n    if(event === \"create\") {\r\n        setProductState({...productState,stock : 0})\r\n    } else if(event === \"edit\") {\r\n        let pdList = await ProductsApi.doserviceGetProductById(id);\r\n        let pd = pdList[0];\r\n        setProductState(pd);\r\n        setSelectTypeState({ value: pd.typeId, label: pd.typeName })\r\n        setTypeState(pd.typeId)\r\n        selectSetBrandState({ value: pd.brandId, label: pd.brandName_th })\r\n        let carModelIdList = pd.carModelId.split(\",\")\r\n        let carModelList = pd.carModel.split(\",\")\r\n        let carModel = carModelIdList.map((data,index)=>{\r\n            return {value : data , label : carModelList[index]}\r\n        })\r\n        setSelectCarModelState({\r\n            ...selectCarModel,\r\n            data : carModel\r\n        })\r\n        setShowImageState({\r\n            main : pd.mainImg ? pd.mainImg : \"\",\r\n            image : pd.img ? pd.img.split(\",\") : []\r\n        })\r\n\r\n        setFileImageState({\r\n            main : pd.mainImg ? pd.mainImg : \"\",\r\n            image : pd.img ? pd.img.split(\",\") : []\r\n        })\r\n        // setImagesUploadState( pd.img ? pd.img.split(\",\") : [])\r\n        setSelectColorState(pd.color.split(\",\"))\r\n        // setOldMainImageState(pd.mainImg);\r\n        let salesTypeData = _.find(salesType , {value : pd.salesType})\r\n        setSelectSalesType(salesTypeData)\r\n        console.log(\"edit : \" , pd);\r\n    }\r\n    getBrand();\r\n    getProductType();\r\n    getProductColor();\r\n    getCarModel()\r\n  }, []);\r\n \r\n  const getCarModel = async () => {\r\n    let carModelList = await MainApi.doserviceGetCarModel();\r\n    console.log(carModelList)\r\n    let carModel = carModelList.map((data,index)=>{\r\n        return { value: data.id, label: `${data.brand} : ${data.model} (${data.model_year})` };\r\n    })\r\n    setDataCarModelState(carModel);\r\n  }\r\n  const getBrand = async () => {\r\n    let brandList = await ProductsApi.doserviceGetBrand();\r\n    let brand = brandList.map((data,index)=>{\r\n        return { value: data.id, label: data.name };\r\n    })\r\n    setDataBrandState(brand);\r\n  }\r\n  const getProductType = async () => {\r\n    let typeList = await ProductsApi.doserviceGetProductType();\r\n    let type = typeList.map((data,index)=>{\r\n        return { value: data.id, label: data.name_th };\r\n    })\r\n    setDataProductTypeState(type);\r\n  }\r\n  const getProductColor = async () => {\r\n    let colorData = await ProductsApi.doserviceGetConfig(\"PRODUCT_COLOR\");\r\n    colorData = (colorData[0].value).split(\",\")\r\n    let color = colorData.map((data,index)=>{\r\n        return data\r\n    })\r\n    setDataColorState(color);\r\n  }\r\n\r\n  const selectColor = (data) => {\r\n    setSelectColorState([...selectColorState,data]);\r\n  }\r\n  const removeColor = (data) => {\r\n    let color = selectColorState;\r\n    let evens = _.remove(color, function(n) {\r\n        return n !== data;\r\n    });\r\n    setSelectColorState([...evens]);\r\n  }\r\n\r\n\r\n  const clickUpload = (e) => {\r\n    setImagesUploadState([...imagesUploadState , e.filename]);\r\n  }\r\n\r\n  const removeUpload = (index) => {\r\n    let showImage = showImageState.image;\r\n    let fileImage = fileImageState.image\r\n    \r\n    // let evensShowImage = _.remove(showImage, function(n) {\r\n    //     return n !== data;\r\n    // });\r\n    // let evensFileImage = _.remove(fileImage, function(n) {\r\n    //     return n !== data;\r\n    // });\r\n    showImage.splice(index, 1);\r\n    fileImage.splice(index, 1);\r\n    setShowImageState({\r\n        ...showImageState,\r\n        image : showImage\r\n    });\r\n    setFileImageState({\r\n        ...fileImageState,\r\n        image : fileImage\r\n    })\r\n  }\r\n\r\n  const selectType = (e) => {\r\n    setSelectTypeState({ value: e.value, label: e.label })\r\n    setTypeState(e.value)\r\n  }\r\n\r\n  const selectBrand = (e) => {\r\n    selectSetBrandState({ value: e.value, label: e.label })\r\n    setBrandState(e.value)\r\n  }\r\n\r\n  const selectCarModel = (e) => {\r\n    setSelectCarModelState({\r\n        ...selectCarModelState,\r\n        data : e\r\n    })\r\n  }\r\n\r\n  const statusClick = () => {\r\n    let st = productState.status;\r\n    if(st === \"Y\") {\r\n        st = \"N\"\r\n    }else {\r\n        st = \"Y\"\r\n    }\r\n    setProductState({...productState,status : st})\r\n  }\r\n\r\n\r\n  const handleUploadImage = (e,type) => { \r\n    try {\r\n        const file = e.target.files[0] // ## เก็บไว้ setState ลงใน file\r\n        const reader = new FileReader(); // ## เรียก Class FileReader เพื่อแปลง file image ที่รับเข้ามา\r\n        reader.onloadend = () => { // ## เป็น eventของFileReaderเมื่อโหลดภาพเสร็จ\r\n            if(type === \"MAIN\") {\r\n                setShowImageState({\r\n                    ...showImageState,\r\n                    main : reader.result,\r\n                })\r\n            } else {\r\n                let imageList = showImageState.image;\r\n                imageList.push(reader.result);\r\n                setShowImageState({\r\n                    ...showImageState,\r\n                    image : imageList,\r\n                })\r\n            }\r\n        }\r\n        reader.readAsDataURL(file) // ## เป็นส่วนของการแสดงรูป ไม่ค่อยแน่ใจครับ ผู้รู้ช่วยคอมเม้นบอกด้วยนะครับ\r\n        if(file){\r\n            if(type === \"MAIN\") {\r\n                setFileImageState({\r\n                    ...fileImageState,\r\n                    main : e.target.files[0]\r\n                })\r\n            } else {\r\n                if(e.target.files[0]) {\r\n                    let imageList = fileImageState.image;\r\n                    imageList.push(e.target.files[0]);\r\n                    setFileImageState({\r\n                        ...fileImageState,\r\n                        image : imageList\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst saveImage = (data) => {\r\n    try {\r\n        const uploadTask = storage.ref(data.pageUrl).put(data.file);\r\n        return new Promise(resolve => {\r\n            uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                // setProgress(progress);\r\n                console.log(\"progress\",progress)\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage\r\n                .ref(data.ref)\r\n                .child(data.imageName)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    // setUrlImage(url)\r\n                    resolve(url)\r\n                    // console.log(url)\r\n                });\r\n            }\r\n            );\r\n        });\r\n    } catch (error) {\r\n        console.log(error)\r\n        \r\n    }\r\n    \r\n    //history.push(`/order-status/${orderId}`)\r\n}\r\n\r\n  const saveMainImage = async (data) => {\r\n      \r\n    if(data.file.name) {\r\n        let filePage = `product/${data.key}/`\r\n        let ref = `product/${data.key}`\r\n        let imageName = `main-${data.key}`;\r\n        let pageUrl = filePage+imageName\r\n        let file = data.file\r\n        data = {\r\n            filePage,\r\n            ref,\r\n            imageName,\r\n            pageUrl,\r\n            file\r\n        }\r\n        return await saveImage(data)\r\n    } else {\r\n        return data.file\r\n    }\r\n    \r\n  }\r\n\r\n  const saveImages = async (data) => {\r\n    let image = []\r\n    for(let i=0;i<data.file.length;i++){\r\n        if(data.file[i].name) {\r\n            let filePage = `product/${data.key}/`\r\n            let ref = `product/${data.key}`\r\n            let imageName = `${data.key}-${i}`\r\n            let pageUrl = filePage+imageName\r\n            let file = data.file[i]\r\n            let dataImg = {\r\n                filePage,\r\n                ref,\r\n                imageName,\r\n                pageUrl,\r\n                file\r\n            }\r\n            let saveImageData = await saveImage(dataImg)\r\n            image.push(saveImageData)\r\n        } else {\r\n            image.push(data.file[i])\r\n        }\r\n    }\r\n    image = image.toString();\r\n    return image;\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    setSpinnerState(true)\r\n    try {\r\n        data.status = data.status === true ? data.status = \"Y\" : data.status = \"N\";\r\n        console.log(data);\r\n        let create;\r\n        let mainImage = {\r\n            file : fileImageState.main,\r\n            key : data.productKey\r\n        }\r\n        let image = {\r\n            file : fileImageState.image,\r\n            key : data.productKey\r\n        }\r\n        data.mainImg = await saveMainImage(mainImage)\r\n        data.img = await saveImages(image)\r\n        let carModelId = selectCarModelState.data.map((data)=>{\r\n            return data.value\r\n        })\r\n        let carModel = selectCarModelState.data.map((data)=>{\r\n            return data.label\r\n        })\r\n        data.carModelId = carModelId.toString();\r\n        data.carModel = carModel.toString();\r\n        if(event === \"create\") {\r\n            create = await ProductsApi.doserviceCreateProduct(data);\r\n        } else if(event === \"edit\") {\r\n            data.id = id\r\n            create = await ProductsApi.doserviceUpdateProduct(data);\r\n        }\r\n        setSpinnerState(false)\r\n        if(create.code === 1) {\r\n            // if(event === \"edit\" && uploadMainImageState === true) {\r\n            //     ProductsApi.doserviceDeleteImage(oldMainImageState);\r\n            // }\r\n            alert(create.message);\r\n        } else {\r\n            alert(tcv.error);\r\n        }\r\n    } catch (error) {\r\n        setSpinnerState(false)\r\n        alert(tc.SYSTEMERROR)\r\n    }\r\n    \r\n  }\r\n\r\n  const tinyEditerChange = (e) => {\r\n    setProductState({...productState,subDetail : e})\r\n }\r\n\r\n  return(\r\n      <>\r\n      <SpinnerComp spinner={spinnerState}/>\r\n          <div className=\"container admin-page\">\r\n              <h2>{event === \"create\" ? \"เพิ่ม\" : \"แก้ไข\"}สินค้า</h2>\r\n              <br/>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>คีย์สินค้า</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"productKey\" \r\n                                ref={register({ required: true })}\r\n                                defaultValue={productState.productKey}\r\n                            />\r\n                            {errors.productKey && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>ชื่อสินค้า</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"name\" \r\n                                ref={register({ required: true })}\r\n                                defaultValue={productState.name}    \r\n                            />\r\n                            {errors.name && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>รายละเอียดหลัก</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"mainDetail\" \r\n                                ref={register({ required: false })}\r\n                                defaultValue={productState.mainDetail}    \r\n                            />\r\n                            {errors.mainDetail && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>รายละเอียด</label>\r\n                            <textarea \r\n                                rows=\"3\" \r\n                                className=\"form-control\" \r\n                                name=\"detail\" \r\n                                ref={register({ required: false })}\r\n                                defaultValue={productState.detail}\r\n                            >\r\n                            </textarea>\r\n                            {errors.detail && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>รายละเอียดเพิ่มเติม</label>\r\n                            <TinyEditerComp onChangeEditer={(e) => tinyEditerChange(e)} value={productState.subDetail} height=\"500\" />\r\n                            <input\r\n                                type=\"hidden\"\r\n                                rows=\"3\" \r\n                                className=\"form-control\" \r\n                                name=\"subDetail\" \r\n                                ref={register({ required: false })}\r\n                                defaultValue={productState.subDetail}\r\n                            />\r\n                            {errors.subDetail && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>ราคา</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"price\" \r\n                                ref={register({ required: true })}\r\n                                defaultValue={productState.price}\r\n                            />\r\n                            {errors.price && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>ราคาเต็ม</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"fullPrice\" \r\n                                ref={register({ required: true })}\r\n                                defaultValue={productState.fullPrice}\r\n                                />\r\n                            {errors.fullPrice && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>ค่าจัดส่ง</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"deliveryCost\" \r\n                                ref={register({ required: true })}\r\n                                defaultValue={productState.deliveryCost}\r\n                                />\r\n                            {errors.deliveryCost && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>แบรนด์</label>\r\n                            <Select \r\n                                options={dataBrandState} \r\n                                value={selectBrandState}\r\n                                onChange={(e)=>selectBrand(e)}\r\n                            />\r\n                            <input type=\"hidden\" className=\"form-control\" name=\"brand\" value={selectBrandState.value} ref={register({ required: true })}/>\r\n                            {errors.brand && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>ประเภท</label>\r\n                            <Select \r\n                                options={dataProductTypeState} \r\n                                value={selectTypeState}\r\n                                onChange={(e)=>selectType(e)}\r\n                            />\r\n                            <input type=\"hidden\" className=\"form-control\" name=\"type\" value={typeState.toString()} ref={register({ required: false })}/>\r\n                            {errors.type && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>รุ่นรถ</label>\r\n                            <Select \r\n                                options={dataCarModelState} \r\n                                value={selectCarModelState.data}\r\n                                isMulti\r\n                                onChange={(e)=>selectCarModel(e)}\r\n                            />\r\n                            <input type=\"hidden\" className=\"form-control\" name=\"type\" value={typeState.toString()} ref={register({ required: false })}/>\r\n                            {errors.type && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>สี</label>\r\n                            <div style={{border : \"1px solid #aaa\" ,padding : \"10px 30px 10px 30px\"}}>\r\n                                <div className=\"row\">\r\n                                    {selectColorState.map((data,index)=>{\r\n                                        return <div \r\n                                            className=\"col-1\" \r\n                                            style={{marginRight : \"10px\", width:\"100%\" , height : \"30px\" , backgroundColor : `${data}` , cursor : \"pointer\"}}\r\n                                            onClick={()=>removeColor(data)}\r\n                                        ></div>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <p>เลือกสี</p>\r\n                            <div style={{paddingLeft : \"10px\"}}>\r\n                                <div className=\"row\">\r\n                                    {dataColorState.map((data,index)=>{\r\n                                        return <div \r\n                                            className=\"col-1\" \r\n                                            style={{marginRight : \"10px\", width:\"100%\" , height : \"30px\" , backgroundColor : data , cursor : \"pointer\"}}\r\n                                            onClick={()=>selectColor(data)}\r\n                                        ></div>\r\n                                    })}\r\n                                </div>\r\n                                <input type=\"hidden\" name=\"color\" value={selectColorState.toString()} ref={register({ required: true })}/>\r\n                            </div>\r\n                            {errors.color && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            {/* {imageState.mainImageData ? imageState.mainImageData.data : \"\"} */}\r\n                            <label>อัพโหลดรูปภาพหลัก</label>\r\n                            {/* <div style={{width : \"50%\"}}>\r\n                                {productState.mainImg ? <img src={`${process.env.REACT_APP_ENGINE_URL}images/${productState.mainImg}`} width=\"100%\"/> : \"\"}\r\n                            </div> */}\r\n                            <div style={{width : \"50%\"}}>\r\n                                {showImageState.main ? <img src={showImageState.main} width=\"100%\"/> : \"\"}\r\n                            </div>\r\n                            <br/>\r\n                            <input type=\"file\" onChange={(e)=>handleUploadImage(e,\"MAIN\")}/>\r\n                            {/* <UploadImageComp onClickUpload={(e)=>clickUploadMainImg(e)} /> */}\r\n                            <br/>\r\n                            {/* <input type=\"hidden\" name=\"img\" value={imageState.mainImageUrl} ref={register({ required: true })}/> */}\r\n                            {errors.img && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>อัพโหลดรูปภาพ</label>\r\n                            <div style={{border : \"1px solid #aaa\" ,padding : \"10px 30px 10px 30px\"}}>\r\n                                {showImageState.image.length>0 ?\r\n                                    <div className=\"row\">\r\n                                    {showImageState.image.map((data,index)=>{\r\n                                        return <div \r\n                                            className=\"col-3\" \r\n                                            style={{marginRight : \"10px\", cursor : \"pointer\" , paddingBottom : 10}}\r\n                                            onClick={()=>removeUpload(index)}\r\n                                        >\r\n                                            <img src={data} width=\"100%\"/>\r\n                                        </div>\r\n                                    })}\r\n                                </div>\r\n                                : \"\"}\r\n                                <div>\r\n                                    <button type=\"button\" className=\"btn btn-success\">เพิ่ม</button>\r\n                                    <input \r\n                                        type=\"file\" \r\n                                        style={{width:50,height:40,marginLeft:-50,opacity:0,cursor:\"pointer\"}}\r\n                                        onChange={(e)=>handleUploadImage(e,\"IMAGE\")}\r\n                                    />\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                            <br/>\r\n                            {/* <UploadImageComp onClickUpload={(e)=>clickUpload(e)} /> */}\r\n\r\n                            <br/>\r\n                            <input type=\"hidden\" name=\"img\" value={showImageState.image.toString()} ref={register({ required: true })}/>\r\n                            {errors.img && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>สต๊อก</label>\r\n                            <input \r\n                                type=\"number\" \r\n                                name=\"stock\" \r\n                                className=\"form-control\" \r\n                                defaultValue={productState.stock} \r\n                                ref={register({ required: true })}\r\n                            />\r\n                            {errors.stock && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>ประเภทการขาย</label>\r\n                            <Select \r\n                                options={salesType} \r\n                                value={selectSalesType}\r\n                                onChange={(e)=>setSelectSalesType(e)}\r\n                            />\r\n                            <input hidden className=\"form-control\" name=\"salesType\" value={selectSalesType.value} ref={register({ required: true })}/>\r\n                            {errors.stock && <span className=\"text-danger\">{tcv}</span>}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>สถานะ</label>\r\n                            <br/>\r\n                            <label className=\"switch\">\r\n                                <input type=\"checkbox\" name=\"status\" ref={register({ required: false })} onClick={()=>statusClick()} checked={productState.status === \"Y\" || event === \"create\" ? true : false }/>\r\n                                {errors.status && <span className=\"text-danger\">{tcv}</span>}\r\n                                <span className=\"slider round\"></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <center><button className=\"btn btn-primary\" type=\"submit\">บันทึก</button></center>\r\n              </form>\r\n              {/* <button onClick={()=>submitImage(fileImageState.main)}>ok</button> */}\r\n          </div>\r\n      </>\r\n  )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\component\\MenuTopComp.js",["151","152","153","154","155","156","157","158"],"import React ,{useState,useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MenuTopComp(props) {\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        if(!localStorage.getItem(\"user\")) {\r\n            localStorage.clear();\r\n            window.location.replace('/login');\r\n        }\r\n    }, [])\r\n\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        window.location.replace('/login');\r\n    }\r\n    const changeHistory = (location) => {\r\n        history.push(location)\r\n    }\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"#\">หน้าหลัก</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" style={{cursor : \"pointer\"}}>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/all-product\">สินค้า</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/all-order\">คำสั่งซื้อ</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Dropdown\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                        <div className=\"dropdown-divider\"></div>\r\n                        <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                    </li>\r\n                    </ul>\r\n                    <div className=\"form-inline my-2 my-lg-0\">\r\n                    <button className=\"btn btn-outline-light my-2 my-sm-0\" onClick={()=>logout()}>Logout</button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\page\\order\\OrderDetailPage.js",["159","160","161","162","163","164","165","166"],"C:\\WORK\\shopping\\cms-shopping\\src\\component\\UploadImageComp.js",["167","168","169","170"],"import React ,{useState,useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport MainApi from \"../apis/MainApi\"\r\n\r\n\r\nexport default function UploadImageComp(props) {\r\n    const [file, setFile] = useState({}) // ## ใช้เพื่อส่งไปที่ API\r\n    const [imagePreviewUrl, setImagePreviewUrl] = useState(null) // ##ใช้เพื่อภาพ Preview\r\n    const [imageResState , setImageResState] = useState({});\r\n\r\n    const handleUploadImage = (e) => { \r\n        const file = e.target.files[0] // ## เก็บไว้ setState ลงใน file\r\n        const reader = new FileReader(); // ## เรียก Class FileReader เพื่อแปลง file image ที่รับเข้ามา\r\n        reader.onloadend = () => { // ## เป็น eventของFileReaderเมื่อโหลดภาพเสร็จ\r\n            setFile(file) // ## ทำการ setState\r\n            setImagePreviewUrl(reader.result) // ##เหมือนด้านบน\r\n        }\r\n        reader.readAsDataURL(file) // ## เป็นส่วนของการแสดงรูป ไม่ค่อยแน่ใจครับ ผู้รู้ช่วยคอมเม้นบอกด้วยนะครับ\r\n    }\r\n\r\n    const onClickUpload = async () => {\r\n        const formData = new FormData() // #สร้างตัวแปร มารับ Class FormData\r\n        formData.append('file', file) // #arg แรกนั้นเป็น ชื่อ Key ส่วน arg2 เป็น Value\r\n        let uploadImage = await MainApi.doserviceUploadImage(formData);\r\n        setImageResState(uploadImage);\r\n        console.log(uploadImage)\r\n        props.onClickUpload(uploadImage); \r\n    }\r\n        \r\n   \r\n    return (\r\n        <>\r\n            {/* <img\r\n                src={imagePreviewUrl ? imagePreviewUrl :    \"https://dcvta86296.i.lithium.com/t5/image/serverpage/image--id/14321i0011CCD2E7F3C8F8/image-size/large?v=1.0&px=999\"\r\n            }\r\n                style={{width: \"500px\", height: \"500px\"}}\r\n            />  */}\r\n            <input \r\n                type=\"file\"\r\n                onChange={handleUploadImage}\r\n            />\r\n            <button type=\"button\" onClick={()=>{onClickUpload()}}> Upload </button>\r\n             \r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\component\\ModalShowUploadSlip.js",["171","172"],"import React , {useState , useEffect} from \"react\";\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n// Comp\r\nimport UploadImmagePaySlipComp from \"./UploadImmagePaySlipComp\"\r\nexport default function ModalShowUploadSlip(props) {\r\n    const [showImageState , setShowImageState] = useState();\r\n    return (\r\n        <>\r\n        <Modal show={props.show} size=\"lg\" onHide={()=>{props.onChange(false)}}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title style={{fontSize:\"1.2rem\"}}><b><span><i class=\"fas fa-upload\"></i></span> อัพโหลดหลักฐานการชำระเงิน</b></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <UploadImmagePaySlipComp\r\n                detailShow={showImageState ? false : true} \r\n                order={props.order} \r\n                uploadStatus={(e) => {props.uploadStatus(e)}}\r\n                />\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\component\\TinyEditerComp.js",["173","174","175","176"],"import React, {  useEffect, useState } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport bootbox from 'bootbox';\r\n// import UploadFileApi from '../apis/UploadFileApi'\r\n\r\nimport MainApi from \"../apis/MainApi\"\r\n\r\n\r\nexport default function TinyEditerComp(props) {\r\n    const [pathState] = useState(props.mainPath ? props.mainPath : \"image\");\r\n    const [editerState , setEditerState] = useState()\r\n\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n    useEffect(()=>{\r\n        setEditerState(props.value)\r\n    },[props.value])\r\n\r\n    return(\r\n        <div style={{marginTop:\"-40px\"}}>\r\n\r\n            {/* \r\n            --- origin ---\r\n            https://www.tiny.cloud/docs/demo/file-picker/# \r\n            */}\r\n            <div className=\"tiny-main\">\r\n            <div style={{width : \"100%\" , marginBottom : \"10px\"}} className=\"text-right\" >\r\n                <button type=\"button\" className=\"btn btn-outline-secondary\" data-toggle=\"modal\" data-target=\"#previewEditer\">Preview</button>\r\n            </div>\r\n            <Editor\r\n            name=\"desc\"\r\n            id='checklist'\r\n            //initialValue={factorDataState.desc ? factorDataState.desc : \"\"}\r\n            apiKey=\"c5gudmhpi5va3nmu52sse35zw3jhv2op991l34rglvc2rkzo\"\r\n            value={props.value ? props.value : null}\r\n            \r\n            init={{\r\n                selector: \"textarea#checklist\",\r\n                height: props.height ? props.height : 500,\r\n                menubar: true,\r\n                plugins: [\r\n                    'advlist autolink lists link image',\r\n                    'charmap print preview anchor help',\r\n                    'searchreplace visualblocks code',\r\n                    'insertdatetime media table paste wordcount'\r\n                ],\r\n                toolbar:\r\n                'undo redo | formatselect | bold italic backcolor | codesample \\\r\n                alignleft aligncenter alignright alignjustify | \\\r\n                bullist numlist outdent indent | removeformat | image help',\r\n\r\n\r\n                /* enable title field in the Image dialog*/\r\n                image_title: true,\r\n                /* enable automatic uploads of images represented by blob or data URIs*/\r\n                automatic_uploads: true,\r\n                /*\r\n                    URL of our upload handler (for more details check: https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_url)\r\n                    images_upload_url: 'postAcceptor.php',\r\n                    here we add custom filepicker only to Image dialog\r\n                */\r\n                file_picker_types: 'image',\r\n                /* and here's our custom image picker*/\r\n                // images_upload_base_path: 'https://phanechon.com/travel/tra-img/tra-img-maina-jpg/tra-57.jpg',\r\n                file_picker_callback: function (cb, value, meta) {\r\n                    var input = document.createElement('input');\r\n                    input.setAttribute('type', 'file');\r\n                    input.setAttribute('accept', 'image/*');\r\n\r\n                    /*\r\n                    Note: In modern browsers input[type=\"file\"] is functional without\r\n                    even adding it to the DOM, but that might not be the case in some older\r\n                    or quirky browsers like IE, so you might want to add it to the DOM\r\n                    just in case, and visually hide it. And do not forget do remove it\r\n                    once you do not need it anymore.\r\n                    */\r\n\r\n                    input.onchange = function () {\r\n\r\n                        var file = this.files[0];\r\n                        let uploadStatus = true;\r\n                        var reader = new FileReader();\r\n                        let uploadImage;\r\n                        reader.onload = async function () {\r\n                            let data = file\r\n                            let fileName = \"\";\r\n                            if(data.size > 10000000) {\r\n                                bootbox.alert(`Over 10 MB size \"${data.name}\"`);\r\n                                uploadStatus = false;\r\n                            } else {\r\n                                const formData = new FormData() // #สร้างตัวแปร มารับ Class FormData\r\n                                formData.append('file', file) // #arg แรกนั้นเป็น ชื่อ Key ส่วน arg2 เป็น Value\r\n                                uploadImage = await MainApi.doserviceUploadImage(formData);\r\n                                // setImageResState(uploadImage);\r\n                                console.log(uploadImage)\r\n                                uploadStatus = true;\r\n                            } \r\n\r\n                            if(uploadStatus === true) {\r\n                                cb(`${process.env.REACT_APP_ENGINE_URL}/images/${uploadImage.filename}`, { title: file.name });\r\n                            }\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                        };\r\n\r\n                    input.click();\r\n                }\r\n            }}\r\n            // onChange={(e) => onChangeEditer(e)}\r\n            // onBlur={() => onBlurEditer()}\r\n            onEditorChange={(e)=>{props.onChangeEditer(e) ; setEditerState(e)}}\r\n            // onEditorChange={(e)=>{setEditerState(e)}}\r\n        />\r\n        </div>\r\n\r\n\r\n        {/* <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n        Launch demo modal\r\n        </button> */}\r\n        <div className=\"modal fade\" id=\"previewEditer\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-xl\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Preview</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div dangerouslySetInnerHTML={{ __html: editerState }} />\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n                        \r\n        </div>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\component\\ModalShowImageComp.js",["177","178","179"],"import React , {useState , useEffect} from \"react\";\r\nimport { Modal } from 'react-bootstrap';\r\nexport default function ModalShowImageComp(props) {\r\n\r\n    return (\r\n        <>\r\n        <Modal show={props.show} size=\"lg\" onHide={()=>{props.onChange(false)}}>\r\n            <Modal.Header closeButton>\r\n            {/* <Modal.Title style={{fontSize:\"1.2rem\"}}><b><span className=\"text-success\"><i class=\"fas fa-check\"></i></span> สินค้าจำนวน 1 รายการได้ถูกเพิ่มลงในรถเข็นของท่าน</b></Modal.Title> */}\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {props.image ? <img src={props.image} width=\"100%\"/> : \"\"}\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\component\\DeliveryAddressComp.js",[],"C:\\WORK\\shopping\\cms-shopping\\src\\component\\SpinnerComp.js",["180","181"],"import React , {useState , useEffect} from \"react\";\r\nexport default function SpinnerComp (props) {\r\n    return (\r\n        <>\r\n        {props.spinner ?\r\n            <div className=\"background-loader\" >\r\n            <div className=\"sk-chase\">\r\n                <div className=\"loader\">Loading...</div>\r\n            </div>\r\n            </div>\r\n        : <></> }\r\n        \r\n        </>\r\n    )\r\n}","C:\\WORK\\shopping\\cms-shopping\\src\\apis\\LoginApi.js",[],"C:\\WORK\\shopping\\cms-shopping\\src\\apis\\ProductsApi.js",[],"C:\\WORK\\shopping\\cms-shopping\\src\\apis\\MainApi.js",["182"],"import axios from \"axios\";\r\nimport pv from \"../config/province.json\"\r\nimport ap from \"../config/amphures.json\"\r\nimport ds from \"../config/districts.json\"\r\nlet _ = require('lodash');\r\n\r\nconst doserviceUploadImage = (formData) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${process.env.REACT_APP_ENGINE_URL}upload`, formData , {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        })\r\n        .then(res => {\r\n            resolve(res.data);\r\n        }).catch(reason => {\r\n            reject(reason);\r\n        })\r\n    });\r\n}\r\n\r\nconst doserviceUploadImageBase64 = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${process.env.REACT_APP_ENGINE_URL}uploadImage`, data , {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        })\r\n        .then(res => {\r\n            resolve(res.data);\r\n        }).catch(reason => {\r\n            reject(reason);\r\n        })\r\n    });\r\n}\r\n\r\nconst doserviceUploadImageSlipPay = (formData) => {\r\n    let data = {\r\n        formData : formData,\r\n        // tel : tel,\r\n        folder : \"\"\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${process.env.REACT_APP_ENGINE_URL}uploadFolder`, formData , {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        })\r\n        .then(res => {\r\n            resolve(res.data);\r\n        }).catch(reason => {\r\n            reject(reason);\r\n        })\r\n    });\r\n}\r\n\r\nconst doserviceGetCarModel = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(`${process.env.REACT_APP_ENGINE_URL}getCarModel`, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        })\r\n        .then(res => {\r\n            resolve(res.data);\r\n        }).catch(reason => {\r\n            reject(reason);\r\n        })\r\n    });\r\n}\r\n\r\nconst percentSell = (fullPrice , price) => {\r\n    const discount = fullPrice - price;\r\n    const percent = (discount/fullPrice) * 100;\r\n    return percent;\r\n}\r\n\r\nconst getProvinces = () => {\r\n    return _.sortBy(pv, ['name_th']);\r\n}\r\n\r\nconst getAmphure = (province_id) => {\r\n    let amphure = _.filter(ap,{province_id : parseInt(province_id)})\r\n    return _.sortBy(amphure, ['name_th']); \r\n}\r\n\r\nconst getDistricts = (amphure_id) => {\r\n    amphure_id = amphure_id.toString()\r\n    let districts = []\r\n    for(let i=0 ; i<ds.length ; i++ ) {\r\n        let idDs = ds[i].id.toString();\r\n        idDs = idDs.substring(0, 4);\r\n        if(idDs === amphure_id) {\r\n            districts.push(ds[i])\r\n        }\r\n    }\r\n\r\n    return _.sortBy(districts, ['name_th']);\r\n}\r\n\r\nconst getPostCode = (districts_id) => {\r\n    let postCode = _.find(ds , {id : districts_id})\r\n    return postCode.zip_code\r\n}\r\n\r\nconst toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n});\r\n\r\nconst UploadImageBase64 = async (e , callback) => {\r\n        var file = e.target.files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = async function () {\r\n            let image = {};\r\n            let data = file\r\n            let fileName = \"\";\r\n            \r\n            if(data.size > 500000) {\r\n                alert(`Over 500 KB size \"${data.name}\"`);\r\n                \r\n            } else {\r\n                const typeFileList = [\"PNG\",\"JPG\",\"JPEG\"];\r\n                const typeFile = (file.name.split('.')[1]).toUpperCase();\r\n                if( typeFileList.includes(typeFile)) {\r\n                    let dataBase64 = await toBase64(data);\r\n                    var dateObj = new Date();\r\n                    let month = ((\"0\" + (dateObj.getMonth() + 1)).slice(-2)).toString()\r\n                    let day = ((\"0\" + dateObj.getDate()).slice(-2)).toString()\r\n                    let year = (dateObj.getFullYear()).toString();\r\n                    let hours = ((\"0\" + dateObj.getHours()).slice(-2)).toString();\r\n                    let minutes = ((\"0\" + dateObj.getMinutes()).slice(-2)).toString();\r\n                    let milliseconds = (dateObj.getMilliseconds()).toString();\r\n                    \r\n                    fileName = year + month + day + hours + minutes + milliseconds + data.name ;\r\n                    image = {\r\n                        name : `${fileName}`,\r\n                        size : data.size,\r\n                        data : dataBase64.split(',')[1]\r\n                    }\r\n                } else {\r\n                    alert(`The file type is invalid.`);\r\n                }\r\n            }\r\n            callback(image)\r\n            \r\n        };\r\n        reader.readAsDataURL(file);\r\n}\r\n\r\nconst x = async (e) => {\r\n    let x = await UploadImageBase64(e,(image) => {\r\n    console.log(image)\r\n    return image\r\n    });\r\n    return x\r\n    // return x\r\n    \r\n}\r\n\r\nconst apis = {\r\n    doserviceUploadImage,\r\n    doserviceUploadImageSlipPay,\r\n    percentSell,\r\n    getProvinces,\r\n    getAmphure,\r\n    getDistricts,\r\n    getPostCode,\r\n    UploadImageBase64,\r\n    x,\r\n    doserviceUploadImageBase64,\r\n    doserviceGetCarModel\r\n}\r\n\r\nexport default apis;","C:\\WORK\\shopping\\cms-shopping\\src\\apis\\OrderApi.js",[],"C:\\WORK\\shopping\\cms-shopping\\src\\component\\UploadImmagePaySlipComp.js",["183","184","185","186","187","188","189","190","191"],"C:\\WORK\\shopping\\cms-shopping\\src\\firebase\\index.js",[],{"ruleId":"192","severity":1,"message":"193","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":11},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"192","severity":1,"message":"200","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":21},{"ruleId":"192","severity":1,"message":"201","line":2,"column":23,"nodeType":"194","messageId":"195","endLine":2,"endColumn":34},{"ruleId":"192","severity":1,"message":"202","line":7,"column":5,"nodeType":"194","messageId":"195","endLine":7,"endColumn":9},{"ruleId":"192","severity":1,"message":"203","line":8,"column":5,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"204","line":9,"column":5,"nodeType":"194","messageId":"195","endLine":9,"endColumn":15},{"ruleId":"192","severity":1,"message":"205","line":21,"column":8,"nodeType":"194","messageId":"195","endLine":21,"endColumn":9},{"ruleId":"192","severity":1,"message":"206","line":39,"column":12,"nodeType":"194","messageId":"195","endLine":39,"endColumn":23},{"ruleId":"192","severity":1,"message":"207","line":1,"column":16,"nodeType":"194","messageId":"195","endLine":1,"endColumn":24},{"ruleId":"192","severity":1,"message":"208","line":8,"column":37,"nodeType":"194","messageId":"195","endLine":8,"endColumn":42},{"ruleId":"192","severity":1,"message":"209","line":9,"column":9,"nodeType":"194","messageId":"195","endLine":9,"endColumn":16},{"ruleId":"192","severity":1,"message":"207","line":1,"column":16,"nodeType":"194","messageId":"195","endLine":1,"endColumn":24},{"ruleId":"210","severity":1,"message":"211","line":52,"column":9,"nodeType":"212","messageId":"213","endLine":52,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":131,"column":19,"nodeType":"216","messageId":"217","endLine":131,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":131,"column":81,"nodeType":"216","messageId":"217","endLine":131,"endColumn":83},{"ruleId":"214","severity":1,"message":"218","line":131,"column":81,"nodeType":"216","messageId":"217","endLine":131,"endColumn":83},{"ruleId":"214","severity":1,"message":"218","line":133,"column":20,"nodeType":"216","messageId":"217","endLine":133,"endColumn":22},{"ruleId":"214","severity":1,"message":"218","line":133,"column":83,"nodeType":"216","messageId":"217","endLine":133,"endColumn":85},{"ruleId":"214","severity":1,"message":"218","line":134,"column":19,"nodeType":"216","messageId":"217","endLine":134,"endColumn":21},{"ruleId":"192","severity":1,"message":"219","line":11,"column":9,"nodeType":"194","messageId":"195","endLine":11,"endColumn":12},{"ruleId":"192","severity":1,"message":"209","line":12,"column":7,"nodeType":"194","messageId":"195","endLine":12,"endColumn":14},{"ruleId":"214","severity":1,"message":"215","line":108,"column":17,"nodeType":"216","messageId":"217","endLine":108,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":108,"column":77,"nodeType":"216","messageId":"217","endLine":108,"endColumn":79},{"ruleId":"214","severity":1,"message":"218","line":108,"column":77,"nodeType":"216","messageId":"217","endLine":108,"endColumn":79},{"ruleId":"214","severity":1,"message":"218","line":109,"column":28,"nodeType":"216","messageId":"217","endLine":109,"endColumn":30},{"ruleId":"214","severity":1,"message":"218","line":109,"column":99,"nodeType":"216","messageId":"217","endLine":109,"endColumn":101},{"ruleId":"214","severity":1,"message":"218","line":110,"column":29,"nodeType":"216","messageId":"217","endLine":110,"endColumn":31},{"ruleId":"214","severity":1,"message":"218","line":110,"column":101,"nodeType":"216","messageId":"217","endLine":110,"endColumn":103},{"ruleId":"214","severity":1,"message":"218","line":111,"column":21,"nodeType":"216","messageId":"217","endLine":111,"endColumn":23},{"ruleId":"192","severity":1,"message":"220","line":3,"column":27,"nodeType":"194","messageId":"195","endLine":3,"endColumn":33},{"ruleId":"192","severity":1,"message":"221","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":23},{"ruleId":"192","severity":1,"message":"222","line":20,"column":7,"nodeType":"194","messageId":"195","endLine":20,"endColumn":13},{"ruleId":"192","severity":1,"message":"208","line":21,"column":35,"nodeType":"194","messageId":"195","endLine":21,"endColumn":40},{"ruleId":"192","severity":1,"message":"223","line":31,"column":10,"nodeType":"194","messageId":"195","endLine":31,"endColumn":20},{"ruleId":"192","severity":1,"message":"224","line":34,"column":22,"nodeType":"194","messageId":"195","endLine":34,"endColumn":34},{"ruleId":"225","severity":1,"message":"226","line":51,"column":14,"nodeType":"227","endLine":90,"endColumn":4},{"ruleId":"225","severity":1,"message":"228","line":90,"column":6,"nodeType":"229","endLine":90,"endColumn":8,"suggestions":"230"},{"ruleId":"192","severity":1,"message":"231","line":135,"column":9,"nodeType":"194","messageId":"195","endLine":135,"endColumn":20},{"ruleId":"232","severity":1,"message":"233","line":536,"column":56,"nodeType":"234","endLine":536,"endColumn":101},{"ruleId":"232","severity":1,"message":"233","line":556,"column":45,"nodeType":"234","endLine":556,"endColumn":75},{"ruleId":"192","severity":1,"message":"207","line":1,"column":16,"nodeType":"194","messageId":"195","endLine":1,"endColumn":24},{"ruleId":"192","severity":1,"message":"235","line":17,"column":11,"nodeType":"194","messageId":"195","endLine":17,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":24,"column":17,"nodeType":"234","endLine":24,"endColumn":54},{"ruleId":"236","severity":1,"message":"237","line":38,"column":25,"nodeType":"234","endLine":38,"endColumn":174},{"ruleId":"236","severity":1,"message":"237","line":42,"column":25,"nodeType":"234","endLine":42,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":43,"column":25,"nodeType":"234","endLine":43,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":45,"column":25,"nodeType":"234","endLine":45,"endColumn":63},{"ruleId":"236","severity":1,"message":"237","line":49,"column":25,"nodeType":"234","endLine":49,"endColumn":102},{"ruleId":"192","severity":1,"message":"238","line":4,"column":8,"nodeType":"194","messageId":"195","endLine":4,"endColumn":19},{"ruleId":"192","severity":1,"message":"204","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":20},{"ruleId":"192","severity":1,"message":"239","line":15,"column":8,"nodeType":"194","messageId":"195","endLine":15,"endColumn":27},{"ruleId":"192","severity":1,"message":"208","line":22,"column":37,"nodeType":"194","messageId":"195","endLine":22,"endColumn":42},{"ruleId":"192","severity":1,"message":"240","line":39,"column":29,"nodeType":"194","messageId":"195","endLine":39,"endColumn":46},{"ruleId":"192","severity":1,"message":"241","line":40,"column":31,"nodeType":"194","messageId":"195","endLine":40,"endColumn":50},{"ruleId":"192","severity":1,"message":"242","line":41,"column":35,"nodeType":"194","messageId":"195","endLine":41,"endColumn":58},{"ruleId":"225","severity":1,"message":"243","line":51,"column":7,"nodeType":"229","endLine":51,"endColumn":23,"suggestions":"244"},{"ruleId":"192","severity":1,"message":"245","line":1,"column":25,"nodeType":"194","messageId":"195","endLine":1,"endColumn":34},{"ruleId":"192","severity":1,"message":"246","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":13},{"ruleId":"192","severity":1,"message":"247","line":8,"column":12,"nodeType":"194","messageId":"195","endLine":8,"endColumn":27},{"ruleId":"192","severity":1,"message":"248","line":9,"column":12,"nodeType":"194","messageId":"195","endLine":9,"endColumn":25},{"ruleId":"192","severity":1,"message":"245","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":37},{"ruleId":"192","severity":1,"message":"249","line":7,"column":29,"nodeType":"194","messageId":"195","endLine":7,"endColumn":46},{"ruleId":"192","severity":1,"message":"250","line":10,"column":12,"nodeType":"194","messageId":"195","endLine":10,"endColumn":21},{"ruleId":"192","severity":1,"message":"251","line":13,"column":11,"nodeType":"194","messageId":"195","endLine":13,"endColumn":19},{"ruleId":"252","severity":1,"message":"253","line":52,"column":17,"nodeType":"254","messageId":"255","endLine":54,"endColumn":76},{"ruleId":"192","severity":1,"message":"256","line":90,"column":33,"nodeType":"194","messageId":"195","endLine":90,"endColumn":41},{"ruleId":"192","severity":1,"message":"207","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"245","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":37},{"ruleId":"232","severity":1,"message":"233","line":12,"column":32,"nodeType":"234","endLine":12,"endColumn":69},{"ruleId":"192","severity":1,"message":"207","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"245","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":37},{"ruleId":"192","severity":1,"message":"257","line":38,"column":9,"nodeType":"194","messageId":"195","endLine":38,"endColumn":13},{"ruleId":"192","severity":1,"message":"220","line":2,"column":27,"nodeType":"194","messageId":"195","endLine":2,"endColumn":33},{"ruleId":"192","severity":1,"message":"258","line":2,"column":35,"nodeType":"194","messageId":"195","endLine":2,"endColumn":44},{"ruleId":"192","severity":1,"message":"246","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":13},{"ruleId":"192","severity":1,"message":"259","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":15},{"ruleId":"192","severity":1,"message":"247","line":24,"column":12,"nodeType":"194","messageId":"195","endLine":24,"endColumn":27},{"ruleId":"192","severity":1,"message":"248","line":25,"column":12,"nodeType":"194","messageId":"195","endLine":25,"endColumn":25},{"ruleId":"192","severity":1,"message":"260","line":25,"column":28,"nodeType":"194","messageId":"195","endLine":25,"endColumn":44},{"ruleId":"225","severity":1,"message":"261","line":43,"column":7,"nodeType":"229","endLine":43,"endColumn":26,"suggestions":"262"},{"ruleId":"232","severity":1,"message":"233","line":161,"column":21,"nodeType":"234","endLine":165,"endColumn":23},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["263"],"no-negated-in-lhs",["264"],"'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'$' is defined but never used.","'subUrlState' is assigned a value but never used.","'useState' is defined but never used.","'watch' is assigned a value but never used.","'history' is assigned a value but never used.","no-dupe-keys","Duplicate key 'productKey'.","ObjectExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","'tcv' is assigned a value but never used.","'Router' is defined but never used.","'UploadImageComp' is defined but never used.","'moment' is assigned a value but never used.","'brandState' is assigned a value but never used.","'setSalesType' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: '_', 'event', 'id', 'productState', 'salesType', and 'selectCarModel'. Either include them or remove the dependency array. You can also do a functional update 'setProductState(p => ...)' if you only need 'productState' in the 'setProductState' call.","ArrayExpression",["265"],"'clickUpload' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'changeHistory' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ProductsApi' is defined but never used.","'DeliveryAddressComp' is defined but never used.","'setPayStatusState' is assigned a value but never used.","'setOrderStatusState' is assigned a value but never used.","'setDeliveryCompanyState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["266"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'imagePreviewUrl' is assigned a value but never used.","'imageResState' is assigned a value but never used.","'setShowImageState' is assigned a value but never used.","'pathState' is assigned a value but never used.","'toBase64' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'fileName' is assigned a value but never used.","'data' is assigned a value but never used.","'useParams' is defined but never used.","'MainApi' is defined but never used.","'setImageResState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateOrder'. Either include it or remove the dependency array.",["267"],"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [_, event, id, productState, salesType, selectCarModel]",{"range":"274","text":"275"},"Update the dependencies array to be: [getOrder, updateNumState]",{"range":"276","text":"277"},"Update the dependencies array to be: [progress, updateOrder, urlImage]",{"range":"278","text":"279"},[3620,3622],"[_, event, id, productState, salesType, selectCarModel]",[2219,2235],"[getOrder, updateNumState]",[1476,1495],"[progress, updateOrder, urlImage]"]